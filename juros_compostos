#!/bin/python3

import argparse
from math import log

parser = argparse.ArgumentParser(
    formatter_class=argparse.RawDescriptionHelpFormatter,
    description="Calculo de juros compostos",
    epilog="""\
EXEMPLOS:
    calcular valor final
    $ juros_compostos -PV 400 -I 5 -N 3
    463.0500

    calcular valor presente
    $ juros_compostos -FV 463.05 -I 5 -N 3
    400.000

    calcular taxa
    $ juros_compostos -PV 400 -FV 463.05 -N 3
    5.0000%

    calcular periodo
    $ juros_compostos -PV 400 -FV 463.05 -I 5
    3

FORMULAS:
    FV = PV * (1 + I/100)**N
    PV = FV / (1 + I/100)**N
    I  = (FV/PV)**(1/N)
    N  = log(FV/PV) / log(1 + I/100)
""",
)

parser.add_argument("-PV", type=float, help="(Present Value) Valor presente antes do calculo de juros")
parser.add_argument("-FV", type=float, help="(Final Value) Valor final do calculo de juros")
parser.add_argument("-I", type=float, help="Taxa de juros em porcentagem")
parser.add_argument("-N", type=int, help="Periodo que será aplicado")

parser.add_argument("-n", type=int, default=4, help="Número de casas decimais")

args = parser.parse_args()

# globals().update(args.__dict__)
PV, FV, I, N = args.PV, args.FV, args.I, args.N

# calcula FV
if PV and I and N:
    print(f"{ PV*(1+I/100)**N :.{args.n}f}")
# calcula PV
elif FV and I and N:
    print(f"{ FV/(1+I/100)**N :.{args.n}f}")
# calcula I
elif PV and FV and N:
    print(f"{ (FV/PV)**(1/N)-1 :.{args.n}%}")
# calcula N
elif PV and FV and I:
    print(f"{ log(FV/PV)/log(1+I/100) :.0f}")
else:
    parser.print_help()
